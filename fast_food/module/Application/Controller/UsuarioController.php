<?php

namespace Application\Controller;

use Application\Helper\Message;
use Application\Helper\RegexValidatorException;
use Application\Model\UsuarioModel;
use Application\View\ApplicationView;
use Szy\Http\Request;
use Szy\Mvc\View\View;

class UsuarioController extends AdminController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    private function listagem(View $view, $pagina = 1)
    {
        $view->setTitle('Usuários do sistema');

        $model = new UsuarioModel();
        $view->setAttribute('usuarios', $model->listar($pagina));
        $view->flush();
    }

    private function permissao()
    {
        if ($this->usuario->admin != '1') {
            $view = new ApplicationView($this, 'usuario/permissao');
            $view->setTitle('Usuário sem permissão');
            $view->setMessage(new Message('Usuário sem permissão para realizar esta ação', Message::TYPE_WARNING));
            $view->flush();
            return false;
        }
        return true;
    }

    public function indexAction()
    {
        $view = new ApplicationView($this, 'usuario/index');
        $this->listagem($view);
    }

    public function cadastrarAction()
    {
        if (!$this->permissao())
            return;

        $view = new ApplicationView($this, 'usuario/formulario');
        $view->setTitle('Cadastrar usuário');

        $model = new UsuarioModel();
        if ($this->isMethod(Request::METHOD_POST)) {

            $nome = $this->getNome();
            $email = $this->getEmail();
            $senha = $this->getSenha();
            try {
                $nome->validate(true);
                $email->validate();
                $senha->validate();

                $model->insert('usuario', array('nome' => $nome->getValue(), 'email' => $email->getValue(), 'senha' => md5($senha->getValue()), 'admin'=> '0'));
                $view->setMessage(new Message('Usuário alterado com sucesso', Message::TYPE_SUCCESS));

                $this->response->sendRedirect('/usuarios/alterar/' . $model->lastID('codigo') . '?sucesso=s');
            } catch (RegexValidatorException $ex) {
                $view->setMessage(new Message($ex->getMessage(), Message::TYPE_DANGER));
            }
        }
        $view->flush();
    }

    public function alterarAction($codigo)
    {
        if (!$this->permissao())
            return;

        $view = new ApplicationView($this, 'usuario/formulario');
        $view->setTitle('Alterar usuário');

        $model = new UsuarioModel();
        if ($this->isMethod(Request::METHOD_POST)) {

            $nome = $this->getNome();
            $email = $this->getEmail();
            $senha = $this->getSenha();
            try {
                $nome->validate();
                $email->validate();

                if ($senha->getValue() == '') {
                    $model->update('usuario', array('nome' => $nome->getValue(), 'email' => $email->getValue()), 'codigo = ?', array($codigo));
                } else {
                    $model->update('usuario', array('nome' => $nome->getValue(), 'email' => $email->getValue(), 'senha' => md5($senha->getValue())), 'codigo = ?', array($codigo));
                }
                $view->setMessage(new Message('Usuário alterado com sucesso', Message::TYPE_SUCCESS));
            } catch (RegexValidatorException $ex) {
                $view->setMessage(new Message($ex->getMessage(), Message::TYPE_DANGER));
            }
        } else {
            $usuario = (array) $model->row('usuario', null, 'codigo = ?', array($codigo));
            unset($usuario['senha']);
            $view->data = $usuario;
            $view->setMessage(new Message('Preencha o campo senha apenas para alterar a senha atual', Message::TYPE_WARNING));

            if ($this->getParam('sucesso') == 's')
                $view->setMessage(new Message('Usuário cadastrado com sucesso', Message::TYPE_SUCCESS));
        }

        $view->flush();
    }

    public function excluirAction($codigo)
    {
        if (!$this->permissao())
            return;

        $view = new ApplicationView($this, 'usuario/index');

        $model = new UsuarioModel();
        try {
            $model->delete('usuario', 'codigo = ?', array($codigo));
            $view->setMessage(new Message('Usuário excluída', Message::TYPE_SUCCESS));
        } catch (\PDOException $ex) {
            $view->setMessage(new Message($ex->getMessage(), Message::TYPE_DANGER));
        }
        $this->listagem($view);
    }
}